services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        volumes:
            - .:/var/www
            - /var/www/vendor/
        ports:
            - "9000:9000"
        networks:
            - laravel_network
        depends_on:
            db:
                condition: service_healthy
                restart: true
            redis-cache:
                condition: service_healthy
                restart: true
        command: >
            bash -c "php artisan migrate --force && php-fpm"

    scheduler:
        build:
            context: .
        container_name: laravel_scheduler
        networks:
            - laravel_network
        depends_on:
            - app
        volumes:
            - .:/var/www
        entrypoint: >
            sh -c "while :; do php /var/www/artisan schedule:run >> /dev/null 2>&1; sleep 60; done"

    webserver:
        image: nginx:1.25
        container_name: laravel_webserver
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - "8080:80"
        networks:
            - laravel_network
        depends_on:
            - app

    db:
        image: mysql:8.0
        container_name: laravel_db
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE_TEST: ${DB_TEST_DATABASE}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - db_data:/var/lib/mysql
            - ./docker/mysql:/docker-entrypoint-initdb.d
        ports:
            - "3307:3306"
        networks:
            - laravel_network
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            interval: 10s
            retries: 5
            start_period: 10s
            timeout: 10s

    redis-cache:
        image: redis:latest
        container_name: laravel_redis
        restart: always
        ports:
            - "6379:6379"
        networks:
            - laravel_network
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - cache:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]

volumes:
    db_data:
    cache:

networks:
    laravel_network:
        driver: bridge
